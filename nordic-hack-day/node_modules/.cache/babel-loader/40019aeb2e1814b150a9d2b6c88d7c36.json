{"ast":null,"code":"import _defineProperty from \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LayerGroup as LeafletLayerGroup } from 'leaflet';\nimport { withLeaflet } from './context';\nimport MapLayer from './MapLayer';\n\nclass LayerGroup extends MapLayer {\n  createLeafletElement(props) {\n    const el = new LeafletLayerGroup([], this.getOptions(props));\n    this.contextValue = _objectSpread({}, props.leaflet, {\n      layerContainer: el\n    });\n    return el;\n  }\n\n}\n\nexport default withLeaflet(LayerGroup);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/LayerGroup.js"],"names":["LayerGroup","LeafletLayerGroup","withLeaflet","MapLayer","createLeafletElement","props","el","getOptions","contextValue","leaflet","layerContainer"],"mappings":";;;;;;AAEA,SAASA,UAAU,IAAIC,iBAAvB,QAAgD,SAAhD;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAMA,MAAMH,UAAN,SAAyBG,QAAzB,CAAyD;AACvDC,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,UAAMC,EAAE,GAAG,IAAIL,iBAAJ,CAAsB,EAAtB,EAA0B,KAAKM,UAAL,CAAgBF,KAAhB,CAA1B,CAAX;AACA,SAAKG,YAAL,qBAAyBH,KAAK,CAACI,OAA/B;AAAwCC,MAAAA,cAAc,EAAEJ;AAAxD;AACA,WAAOA,EAAP;AACD;;AALsD;;AAQzD,eAAeJ,WAAW,CAAoBF,UAApB,CAA1B","sourcesContent":["// @flow\n\nimport { LayerGroup as LeafletLayerGroup } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport MapLayer from './MapLayer'\nimport type { MapLayerProps } from './types'\n\ntype LeafletElement = LeafletLayerGroup\ntype Props = MapLayerProps\n\nclass LayerGroup extends MapLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    const el = new LeafletLayerGroup([], this.getOptions(props))\n    this.contextValue = { ...props.leaflet, layerContainer: el }\n    return el\n  }\n}\n\nexport default withLeaflet<Props, LayerGroup>(LayerGroup)\n"]},"metadata":{},"sourceType":"module"}