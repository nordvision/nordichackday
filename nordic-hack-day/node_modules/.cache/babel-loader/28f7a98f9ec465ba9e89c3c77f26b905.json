{"ast":null,"code":"import { Control } from 'leaflet';\nimport { withLeaflet } from './context';\nimport MapControl from './MapControl';\n\nclass ScaleControl extends MapControl {\n  createLeafletElement(props) {\n    return new Control.Scale(props);\n  }\n\n}\n\nexport default withLeaflet(ScaleControl);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/ScaleControl.js"],"names":["Control","withLeaflet","MapControl","ScaleControl","createLeafletElement","props","Scale"],"mappings":"AAEA,SAASA,OAAT,QAAwB,SAAxB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAWA,MAAMC,YAAN,SAA2BD,UAA3B,CAA6D;AAC3DE,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,WAAO,IAAIL,OAAO,CAACM,KAAZ,CAAkBD,KAAlB,CAAP;AACD;;AAH0D;;AAM7D,eAAeJ,WAAW,CAAsBE,YAAtB,CAA1B","sourcesContent":["// @flow\n\nimport { Control } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport MapControl from './MapControl'\nimport type { MapControlProps } from './types'\n\ntype LeafletElement = Control.Scale\ntype Props = {\n  imperial?: boolean,\n  maxWidth?: number,\n  metric?: boolean,\n  updateWhenIdle?: boolean,\n} & MapControlProps\n\nclass ScaleControl extends MapControl<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new Control.Scale(props)\n  }\n}\n\nexport default withLeaflet<Props, ScaleControl>(ScaleControl)\n"]},"metadata":{},"sourceType":"module"}