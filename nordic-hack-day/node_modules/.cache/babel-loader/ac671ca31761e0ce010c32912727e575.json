{"ast":null,"code":"import _defineProperty from \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Component } from 'react';\nexport const EVENTS_RE = /^on(.+)$/i;\nexport default class MapEvented extends Component {\n  constructor(props) {\n    super(props);\n    this._leafletEvents = this.extractLeafletEvents(props);\n  }\n\n  componentDidMount() {\n    this.bindLeafletEvents(this._leafletEvents);\n  }\n\n  componentDidUpdate(_prevProps) {\n    this._leafletEvents = this.bindLeafletEvents(this.extractLeafletEvents(this.props), this._leafletEvents);\n  }\n\n  componentWillUnmount() {\n    const el = this.leafletElement;\n    if (!el) return;\n    Object.keys(this._leafletEvents).forEach(ev => {\n      el.off(ev, this._leafletEvents[ev]);\n    });\n  }\n\n  extractLeafletEvents(props) {\n    return Object.keys(props).reduce((res, prop) => {\n      if (EVENTS_RE.test(prop)) {\n        if (props[prop] != null) {\n          const key = prop.replace(EVENTS_RE, (match, p) => p.toLowerCase());\n          res[key] = props[prop];\n        }\n      }\n\n      return res;\n    }, {});\n  }\n\n  bindLeafletEvents(next = {}, prev = {}) {\n    const el = this.leafletElement;\n    if (el == null || el.on == null) return {};\n\n    const diff = _objectSpread({}, prev);\n\n    Object.keys(prev).forEach(ev => {\n      if (next[ev] == null || prev[ev] !== next[ev]) {\n        delete diff[ev];\n        el.off(ev, prev[ev]);\n      }\n    });\n    Object.keys(next).forEach(ev => {\n      if (prev[ev] == null || next[ev] !== prev[ev]) {\n        diff[ev] = next[ev];\n        el.on(ev, next[ev]);\n      }\n    });\n    return diff;\n  }\n\n  fireLeafletEvent(type, data) {\n    const el = this.leafletElement;\n    if (el) el.fire(type, data);\n  }\n\n}","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/MapEvented.js"],"names":["Component","EVENTS_RE","MapEvented","constructor","props","_leafletEvents","extractLeafletEvents","componentDidMount","bindLeafletEvents","componentDidUpdate","_prevProps","componentWillUnmount","el","leafletElement","Object","keys","forEach","ev","off","reduce","res","prop","test","key","replace","match","p","toLowerCase","next","prev","on","diff","fireLeafletEvent","type","data","fire"],"mappings":"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","sourcesContent":["// @flow\n\nimport type { Evented } from 'leaflet'\nimport { Component } from 'react'\n\nexport const EVENTS_RE = /^on(.+)$/i\n\ntype EventHandler = (event: Event) => void\ntype EventsObject = { [key: string]: EventHandler }\n\nexport default class MapEvented<\n  LeafletElement: Evented,\n  Props: Object,\n> extends Component<Props> {\n  _leafletEvents: EventsObject\n  leafletElement: LeafletElement\n\n  constructor(props: Props) {\n    super(props)\n    this._leafletEvents = this.extractLeafletEvents(props)\n  }\n\n  componentDidMount() {\n    this.bindLeafletEvents(this._leafletEvents)\n  }\n\n  componentDidUpdate(_prevProps: Props) {\n    this._leafletEvents = this.bindLeafletEvents(\n      this.extractLeafletEvents(this.props),\n      this._leafletEvents,\n    )\n  }\n\n  componentWillUnmount() {\n    const el = this.leafletElement\n    if (!el) return\n\n    Object.keys(this._leafletEvents).forEach(ev => {\n      el.off(ev, this._leafletEvents[ev])\n    })\n  }\n\n  extractLeafletEvents(props: Props): EventsObject {\n    return Object.keys(props).reduce((res, prop) => {\n      if (EVENTS_RE.test(prop)) {\n        if (props[prop] != null) {\n          const key = prop.replace(EVENTS_RE, (match, p) => p.toLowerCase())\n          res[key] = props[prop]\n        }\n      }\n      return res\n    }, {})\n  }\n\n  bindLeafletEvents(\n    next: EventsObject = {},\n    prev: EventsObject = {},\n  ): EventsObject {\n    const el = this.leafletElement\n    if (el == null || el.on == null) return {}\n\n    const diff = { ...prev }\n    Object.keys(prev).forEach(ev => {\n      if (next[ev] == null || prev[ev] !== next[ev]) {\n        delete diff[ev]\n        el.off(ev, prev[ev])\n      }\n    })\n\n    Object.keys(next).forEach(ev => {\n      if (prev[ev] == null || next[ev] !== prev[ev]) {\n        diff[ev] = next[ev]\n        el.on(ev, next[ev])\n      }\n    })\n\n    return diff\n  }\n\n  fireLeafletEvent(type: string, data: ?any) {\n    const el = this.leafletElement\n    if (el) el.fire(type, data)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}