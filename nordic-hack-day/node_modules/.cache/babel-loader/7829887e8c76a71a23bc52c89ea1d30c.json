{"ast":null,"code":"import _defineProperty from \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport MapEvented from './MapEvented';\nexport default class MapComponent extends MapEvented {\n  getOptions(props) {\n    if (props.pane != null) {\n      return props;\n    }\n\n    if (props.leaflet != null && props.leaflet.pane != null) {\n      return _objectSpread({}, props, {\n        pane: props.leaflet.pane\n      });\n    }\n\n    return props;\n  }\n\n}","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/MapComponent.js"],"names":["MapEvented","MapComponent","getOptions","props","pane","leaflet"],"mappings":";;;;;;AAEA,OAAOA,UAAP,MAAuB,cAAvB;AAGA,eAAe,MAAMC,YAAN,SAGLD,UAHK,CAG6B;AAC1CE,EAAAA,UAAU,CAACC,KAAD,EAAsB;AAC9B,QAAIA,KAAK,CAACC,IAAN,IAAc,IAAlB,EAAwB;AACtB,aAAOD,KAAP;AACD;;AACD,QAAIA,KAAK,CAACE,OAAN,IAAiB,IAAjB,IAAyBF,KAAK,CAACE,OAAN,CAAcD,IAAd,IAAsB,IAAnD,EAAyD;AACvD,+BAAYD,KAAZ;AAAmBC,QAAAA,IAAI,EAAED,KAAK,CAACE,OAAN,CAAcD;AAAvC;AACD;;AACD,WAAOD,KAAP;AACD;;AATyC","sourcesContent":["// @flow\n\nimport MapEvented from './MapEvented'\nimport type { MapComponentProps } from './types'\n\nexport default class MapComponent<\n  LeafletElement,\n  Props: MapComponentProps,\n> extends MapEvented<LeafletElement, Props> {\n  getOptions(props: Props): Props {\n    if (props.pane != null) {\n      return props\n    }\n    if (props.leaflet != null && props.leaflet.pane != null) {\n      return { ...props, pane: props.leaflet.pane }\n    }\n    return props\n  }\n}\n"]},"metadata":{},"sourceType":"module"}