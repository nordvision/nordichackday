{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\n\nvar _slicedToArray = function (e, t) {\n  if (Array.isArray(e)) return e;\n  if (Symbol.iterator in Object(e)) return function (e, t) {\n    var r = [],\n        n = !0,\n        o = !1,\n        a = void 0;\n\n    try {\n      for (var l, i = e[Symbol.iterator](); !(n = (l = i.next()).done) && (r.push(l.value), !t || r.length !== t); n = !0);\n    } catch (e) {\n      o = !0, a = e;\n    } finally {\n      try {\n        !n && i.return && i.return();\n      } finally {\n        if (o) throw a;\n      }\n    }\n\n    return r;\n  }(e, t);\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n},\n    _createClass = function () {\n  function n(e, t) {\n    for (var r = 0; r < t.length; r++) {\n      var n = t[r];\n      n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(e, n.key, n);\n    }\n  }\n\n  return function (e, t, r) {\n    return t && n(e.prototype, t), r && n(e, r), e;\n  };\n}(),\n    _reactLeaflet = require(\"react-leaflet\"),\n    _leaflet = require(\"leaflet\"),\n    _leaflet2 = _interopRequireDefault(_leaflet);\n\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\n\nfunction _objectWithoutProperties(e, t) {\n  var r = {};\n\n  for (var n in e) 0 <= t.indexOf(n) || Object.prototype.hasOwnProperty.call(e, n) && (r[n] = e[n]);\n\n  return r;\n}\n\nfunction _classCallCheck(e, t) {\n  if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\nfunction _possibleConstructorReturn(e, t) {\n  if (!e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  return !t || \"object\" != typeof t && \"function\" != typeof t ? e : t;\n}\n\nfunction _inherits(e, t) {\n  if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof t);\n  e.prototype = Object.create(t && t.prototype, {\n    constructor: {\n      value: e,\n      enumerable: !1,\n      writable: !0,\n      configurable: !0\n    }\n  }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t);\n}\n\nrequire(\"leaflet.markercluster\");\n\nvar MarkerClusterGroup = function (e) {\n  function t() {\n    return _classCallCheck(this, t), _possibleConstructorReturn(this, (t.__proto__ || Object.getPrototypeOf(t)).apply(this, arguments));\n  }\n\n  return _inherits(t, _reactLeaflet.MapLayer), _createClass(t, [{\n    key: \"createLeafletElement\",\n    value: function (e) {\n      e.children, e.leaflet;\n\n      var t = _objectWithoutProperties(e, [\"children\", \"leaflet\"]),\n          o = {},\n          a = {};\n\n      Object.entries(t).forEach(function (e) {\n        var t = _slicedToArray(e, 2),\n            r = t[0],\n            n = t[1];\n\n        return r.includes(\"on\") ? a[r] = n : o[r] = n;\n      });\n      var l = new _leaflet2.default.markerClusterGroup(o);\n      return this.contextValue = {\n        layerContainer: l\n      }, Object.entries(a).forEach(function (e) {\n        var t = _slicedToArray(e, 2),\n            r = t[0],\n            n = t[1],\n            o = \"cluster\" + r.substring(2).toLowerCase();\n\n        l.on(o, n);\n      }), l;\n    }\n  }]), t;\n}();\n\nexports.default = (0, _reactLeaflet.withLeaflet)(MarkerClusterGroup);","map":null,"metadata":{},"sourceType":"script"}