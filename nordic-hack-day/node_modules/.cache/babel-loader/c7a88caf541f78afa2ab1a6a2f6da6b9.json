{"ast":null,"code":"var _jsxFileName = \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/context.js\";\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport React, { createContext, forwardRef, useContext } from 'react';\nconst leafletContext = createContext({});\nexport const useLeaflet = () => useContext(leafletContext);\nexport const LeafletConsumer = leafletContext.Consumer;\nexport const LeafletProvider = leafletContext.Provider;\nexport const withLeaflet = WrappedComponent => {\n  const WithLeafletComponent = (props, ref) => React.createElement(LeafletConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, leaflet => React.createElement(WrappedComponent, Object.assign({}, props, {\n    leaflet: leaflet,\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })));\n\n  const name = // flowlint-next-line sketchy-null-string:off\n  WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  WithLeafletComponent.displayName = \"Leaflet(\".concat(name, \")\");\n  const LeafletComponent = forwardRef(WithLeafletComponent);\n  hoistNonReactStatics(LeafletComponent, WrappedComponent);\n  return LeafletComponent;\n};","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/context.js"],"names":["hoistNonReactStatics","React","createContext","forwardRef","useContext","leafletContext","useLeaflet","LeafletConsumer","Consumer","LeafletProvider","Provider","withLeaflet","WrappedComponent","WithLeafletComponent","props","ref","leaflet","name","displayName","LeafletComponent"],"mappings":";AAEA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,KAAP,IACEC,aADF,EAEEC,UAFF,EAGEC,UAHF,QAKO,OALP;AASA,MAAMC,cAAc,GAAGH,aAAa,CAAiB,EAAjB,CAApC;AAEA,OAAO,MAAMI,UAAU,GAAG,MAAsBF,UAAU,CAACC,cAAD,CAAnD;AAEP,OAAO,MAAME,eAAe,GAAGF,cAAc,CAACG,QAAvC;AACP,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAACK,QAAvC;AAEP,OAAO,MAAMC,WAAW,GACtBC,gBADyB,IAEmD;AAC5E,QAAMC,oBAAoB,GAAG,CAACC,KAAD,EAAQC,GAAR,KAC3B,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,OAAD,IACC,oBAAC,gBAAD,oBAAsBF,KAAtB;AAA6B,IAAA,OAAO,EAAEE,OAAtC;AAA+C,IAAA,GAAG,EAAED,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADF;;AAQA,QAAME,IAAI,GAAG;AACXL,EAAAA,gBAAgB,CAACM,WAAjB,IAAgCN,gBAAgB,CAACK,IAAjD,IAAyD,WAD3D;AAEAJ,EAAAA,oBAAoB,CAACK,WAArB,qBAA8CD,IAA9C;AAEA,QAAME,gBAAgB,GAAGhB,UAAU,CAACU,oBAAD,CAAnC;AACAb,EAAAA,oBAAoB,CAACmB,gBAAD,EAAmBP,gBAAnB,CAApB;AAEA,SAAOO,gBAAP;AACD,CAnBM","sourcesContent":["// @flow\n\nimport hoistNonReactStatics from 'hoist-non-react-statics'\nimport React, {\n  createContext,\n  forwardRef,\n  useContext,\n  type AbstractComponent,\n} from 'react'\n\nimport type { LeafletContext } from './types'\n\nconst leafletContext = createContext<LeafletContext>({})\n\nexport const useLeaflet = (): LeafletContext => useContext(leafletContext)\n\nexport const LeafletConsumer = leafletContext.Consumer\nexport const LeafletProvider = leafletContext.Provider\n\nexport const withLeaflet = <Config: { leaflet: LeafletContext }, Instance>(\n  WrappedComponent: AbstractComponent<Config, Instance>,\n): AbstractComponent<$Diff<Config, { leaflet: LeafletContext }>, Instance> => {\n  const WithLeafletComponent = (props, ref) => (\n    <LeafletConsumer>\n      {(leaflet: LeafletContext) => (\n        <WrappedComponent {...props} leaflet={leaflet} ref={ref} />\n      )}\n    </LeafletConsumer>\n  )\n\n  const name = // flowlint-next-line sketchy-null-string:off\n    WrappedComponent.displayName || WrappedComponent.name || 'Component'\n  WithLeafletComponent.displayName = `Leaflet(${name})`\n\n  const LeafletComponent = forwardRef(WithLeafletComponent)\n  hoistNonReactStatics(LeafletComponent, WrappedComponent)\n\n  return LeafletComponent\n}\n"]},"metadata":{},"sourceType":"module"}