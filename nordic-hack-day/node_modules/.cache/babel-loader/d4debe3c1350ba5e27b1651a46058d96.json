{"ast":null,"code":"import { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet';\nimport { withLeaflet } from './context';\nimport MapLayer from './MapLayer';\n\nclass VideoOverlay extends MapLayer {\n  createLeafletElement(props) {\n    return new LeafletVideoOverlay(props.url, props.bounds, this.getOptions(props));\n  }\n\n  componentDidMount() {\n    super.componentDidMount();\n\n    if (this.props.play === true) {\n      this.leafletElement.getElement().play();\n    }\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url);\n    }\n\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds));\n    }\n\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity);\n    }\n\n    if (toProps.zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(toProps.zIndex);\n    } // flowlint-next-line sketchy-null-bool:off\n\n\n    if (toProps.play === true && !fromProps.play) {\n      this.leafletElement.getElement().play(); // flowlint-next-line sketchy-null-bool:off\n    } else if (!toProps.play && fromProps.play === true) {\n      this.leafletElement.getElement().pause();\n    }\n  }\n\n}\n\nexport default withLeaflet(VideoOverlay);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/VideoOverlay.js"],"names":["VideoOverlay","LeafletVideoOverlay","latLngBounds","withLeaflet","MapLayer","createLeafletElement","props","url","bounds","getOptions","componentDidMount","play","leafletElement","getElement","updateLeafletElement","fromProps","toProps","setUrl","setBounds","opacity","setOpacity","zIndex","setZIndex","pause"],"mappings":"AAEA,SAASA,YAAY,IAAIC,mBAAzB,EAA8CC,YAA9C,QAAkE,SAAlE;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAaA,MAAMJ,YAAN,SAA2BI,QAA3B,CAA2D;AACzDC,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,WAAO,IAAIL,mBAAJ,CACLK,KAAK,CAACC,GADD,EAELD,KAAK,CAACE,MAFD,EAGL,KAAKC,UAAL,CAAgBH,KAAhB,CAHK,CAAP;AAKD;;AAEDI,EAAAA,iBAAiB,GAAG;AAClB,UAAMA,iBAAN;;AACA,QAAI,KAAKJ,KAAL,CAAWK,IAAX,KAAoB,IAAxB,EAA8B;AAC5B,WAAKC,cAAL,CAAoBC,UAApB,GAAiCF,IAAjC;AACD;AACF;;AAEDG,EAAAA,oBAAoB,CAACC,SAAD,EAAmBC,OAAnB,EAAmC;AACrD,QAAIA,OAAO,CAACT,GAAR,KAAgBQ,SAAS,CAACR,GAA9B,EAAmC;AACjC,WAAKK,cAAL,CAAoBK,MAApB,CAA2BD,OAAO,CAACT,GAAnC;AACD;;AACD,QAAIS,OAAO,CAACR,MAAR,KAAmBO,SAAS,CAACP,MAAjC,EAAyC;AACvC,WAAKI,cAAL,CAAoBM,SAApB,CAA8BhB,YAAY,CAACc,OAAO,CAACR,MAAT,CAA1C;AACD;;AACD,QAAIQ,OAAO,CAACG,OAAR,KAAoBJ,SAAS,CAACI,OAAlC,EAA2C;AACzC,WAAKP,cAAL,CAAoBQ,UAApB,CAA+BJ,OAAO,CAACG,OAAvC;AACD;;AACD,QAAIH,OAAO,CAACK,MAAR,KAAmBN,SAAS,CAACM,MAAjC,EAAyC;AACvC,WAAKT,cAAL,CAAoBU,SAApB,CAA8BN,OAAO,CAACK,MAAtC;AACD,KAZoD,CAarD;;;AACA,QAAIL,OAAO,CAACL,IAAR,KAAiB,IAAjB,IAAyB,CAACI,SAAS,CAACJ,IAAxC,EAA8C;AAC5C,WAAKC,cAAL,CAAoBC,UAApB,GAAiCF,IAAjC,GAD4C,CAE5C;AACD,KAHD,MAGO,IAAI,CAACK,OAAO,CAACL,IAAT,IAAiBI,SAAS,CAACJ,IAAV,KAAmB,IAAxC,EAA8C;AACnD,WAAKC,cAAL,CAAoBC,UAApB,GAAiCU,KAAjC;AACD;AACF;;AApCwD;;AAuC3D,eAAepB,WAAW,CAAsBH,YAAtB,CAA1B","sourcesContent":["// @flow\n\nimport { VideoOverlay as LeafletVideoOverlay, latLngBounds } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport MapLayer from './MapLayer'\nimport type { LatLngBounds, MapLayerProps } from './types'\n\ntype LeafletElement = LeafletVideoOverlay\ntype Props = {\n  attribution?: string,\n  bounds: LatLngBounds,\n  opacity?: number,\n  play?: boolean,\n  url: string | string[] | HTMLVideoElement,\n  zIndex?: number,\n} & MapLayerProps\n\nclass VideoOverlay extends MapLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletVideoOverlay(\n      props.url,\n      props.bounds,\n      this.getOptions(props),\n    )\n  }\n\n  componentDidMount() {\n    super.componentDidMount()\n    if (this.props.play === true) {\n      this.leafletElement.getElement().play()\n    }\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url)\n    }\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(latLngBounds(toProps.bounds))\n    }\n    if (toProps.opacity !== fromProps.opacity) {\n      this.leafletElement.setOpacity(toProps.opacity)\n    }\n    if (toProps.zIndex !== fromProps.zIndex) {\n      this.leafletElement.setZIndex(toProps.zIndex)\n    }\n    // flowlint-next-line sketchy-null-bool:off\n    if (toProps.play === true && !fromProps.play) {\n      this.leafletElement.getElement().play()\n      // flowlint-next-line sketchy-null-bool:off\n    } else if (!toProps.play && fromProps.play === true) {\n      this.leafletElement.getElement().pause()\n    }\n  }\n}\n\nexport default withLeaflet<Props, VideoOverlay>(VideoOverlay)\n"]},"metadata":{},"sourceType":"module"}