{"ast":null,"code":"import { Polygon as LeafletPolygon } from 'leaflet';\nimport { withLeaflet } from './context';\nimport Path from './Path';\n\nclass Polygon extends Path {\n  createLeafletElement(props) {\n    return new LeafletPolygon(props.positions, this.getOptions(props));\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    if (toProps.positions !== fromProps.positions) {\n      this.leafletElement.setLatLngs(toProps.positions);\n    }\n\n    this.setStyleIfChanged(fromProps, toProps);\n  }\n\n}\n\nexport default withLeaflet(Polygon);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/Polygon.js"],"names":["Polygon","LeafletPolygon","withLeaflet","Path","createLeafletElement","props","positions","getOptions","updateLeafletElement","fromProps","toProps","leafletElement","setLatLngs","setStyleIfChanged"],"mappings":"AAEA,SAASA,OAAO,IAAIC,cAApB,QAA0C,SAA1C;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAQA,MAAMH,OAAN,SAAsBG,IAAtB,CAAkD;AAChDC,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,WAAO,IAAIJ,cAAJ,CAAmBI,KAAK,CAACC,SAAzB,EAAoC,KAAKC,UAAL,CAAgBF,KAAhB,CAApC,CAAP;AACD;;AAEDG,EAAAA,oBAAoB,CAACC,SAAD,EAAmBC,OAAnB,EAAmC;AACrD,QAAIA,OAAO,CAACJ,SAAR,KAAsBG,SAAS,CAACH,SAApC,EAA+C;AAC7C,WAAKK,cAAL,CAAoBC,UAApB,CAA+BF,OAAO,CAACJ,SAAvC;AACD;;AACD,SAAKO,iBAAL,CAAuBJ,SAAvB,EAAkCC,OAAlC;AACD;;AAV+C;;AAalD,eAAeR,WAAW,CAAiBF,OAAjB,CAA1B","sourcesContent":["// @flow\n\nimport { Polygon as LeafletPolygon } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport Path from './Path'\nimport type { LatLng, PathProps } from './types'\n\ntype LeafletElement = LeafletPolygon\ntype Props = {\n  positions: LatLng[] | LatLng[][] | LatLng[][][],\n} & PathProps\n\nclass Polygon extends Path<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletPolygon(props.positions, this.getOptions(props))\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    if (toProps.positions !== fromProps.positions) {\n      this.leafletElement.setLatLngs(toProps.positions)\n    }\n    this.setStyleIfChanged(fromProps, toProps)\n  }\n}\n\nexport default withLeaflet<Props, Polygon>(Polygon)\n"]},"metadata":{},"sourceType":"module"}