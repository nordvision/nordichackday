{"ast":null,"code":"import _objectWithoutProperties from \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Components/custom-component.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Map, TileLayer, Marker, Popup } from '../Extra';\nimport L from \"leaflet\";\nimport { withLeaflet } from \"react-leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n\nconst MyPopupMarker = ({\n  content,\n  position\n}) => React.createElement(Marker, {\n  position: position,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Popup, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, content));\n\nconst MyMarkersList = ({\n  markers\n}) => {\n  const items = markers.map((_ref) => {\n    let key = _ref.key,\n        props = _objectWithoutProperties(_ref, [\"key\"]);\n\n    return React.createElement(MyPopupMarker, Object.assign({\n      key: key\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  });\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, items);\n};\n\nclass CustomComponent extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      markers: [{\n        key: 'marker1',\n        position: [51.5, -0.1],\n        content: 'My first popup'\n      }, {\n        key: 'marker2',\n        position: [51.51, -0.1],\n        content: 'My second popup'\n      }, {\n        key: 'marker3',\n        position: [51.49, -0.05],\n        content: 'My third popup'\n      }]\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default withLeaflet(CustomComponent);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Components/custom-component.js"],"names":["React","Component","Fragment","Map","TileLayer","Marker","Popup","L","withLeaflet","MarkerClusterGroup","MyPopupMarker","content","position","MyMarkersList","markers","items","map","key","props","CustomComponent","state","render"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,UAA9C;AACA,OAAOC,CAAP,MAAc,SAAd;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;;AAWA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KACpB,oBAAC,MAAD;AAAQ,EAAA,QAAQ,EAAEA,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAQD,OAAR,CADF,CADF;;AAMA,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiD;AACrE,QAAMC,KAAK,GAAGD,OAAO,CAACE,GAAR,CAAY;AAAA,QAAGC,GAAH,QAAGA,GAAH;AAAA,QAAWC,KAAX;;AAAA,WACxB,oBAAC,aAAD;AAAe,MAAA,GAAG,EAAED;AAApB,OAA6BC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADwB;AAAA,GAAZ,CAAd;AAGA,SAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWH,KAAX,CAAP;AACD,CALD;;AAWA,MAAMI,eAAN,SAA8BlB,SAA9B,CAAmD;AAAA;AAAA;AAAA,SACjDmB,KADiD,GACzC;AACNN,MAAAA,OAAO,EAAE,CACP;AAAEG,QAAAA,GAAG,EAAE,SAAP;AAAkBL,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,CAAC,GAAR,CAA5B;AAA0CD,QAAAA,OAAO,EAAE;AAAnD,OADO,EAEP;AAAEM,QAAAA,GAAG,EAAE,SAAP;AAAkBL,QAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,CAAC,GAAT,CAA5B;AAA2CD,QAAAA,OAAO,EAAE;AAApD,OAFO,EAGP;AAAEM,QAAAA,GAAG,EAAE,SAAP;AAAkBL,QAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,CAAC,IAAT,CAA5B;AAA4CD,QAAAA,OAAO,EAAE;AAArD,OAHO;AADH,KADyC;AAAA;;AASjDU,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;;AAXgD;;AAcnD,eAAeb,WAAW,CAACW,eAAD,CAA1B","sourcesContent":["\nimport React, { Component, Fragment } from 'react'\nimport { Map, TileLayer, Marker, Popup } from '../Extra';\nimport L from \"leaflet\";\nimport { withLeaflet } from \"react-leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\n\ntype Position = [number, number]\n\ntype Props = {|\n  content: string,\n  position: Position,\n|}\n\ntype MarkerData = {| ...Props, key: string |}\n\nconst MyPopupMarker = ({ content, position }: Props) => (\n  <Marker position={position}>\n    <Popup>{content}</Popup>\n  </Marker>\n)\n\nconst MyMarkersList = ({ markers }: { markers: Array<MarkerData> }) => {\n  const items = markers.map(({ key, ...props }) => (\n    <MyPopupMarker key={key} {...props} />\n  ))\n  return <Fragment>{items}</Fragment>\n}\n\ntype State = {\n  markers: Array<MarkerData>,\n}\n\nclass CustomComponent extends Component<{}, State> {\n  state = {\n    markers: [\n      { key: 'marker1', position: [51.5, -0.1], content: 'My first popup' },\n      { key: 'marker2', position: [51.51, -0.1], content: 'My second popup' },\n      { key: 'marker3', position: [51.49, -0.05], content: 'My third popup' },\n    ],\n  }\n\n  render() {\n    return null\n  }\n}\n\nexport default withLeaflet(CustomComponent);\n"]},"metadata":{},"sourceType":"module"}