{"ast":null,"code":"import { Rectangle as LeafletRectangle } from 'leaflet';\nimport { withLeaflet } from './context';\nimport Path from './Path';\n\nclass Rectangle extends Path {\n  createLeafletElement(props) {\n    return new LeafletRectangle(props.bounds, this.getOptions(props));\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(toProps.bounds);\n    }\n\n    this.setStyleIfChanged(fromProps, toProps);\n  }\n\n}\n\nexport default withLeaflet(Rectangle);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/Rectangle.js"],"names":["Rectangle","LeafletRectangle","withLeaflet","Path","createLeafletElement","props","bounds","getOptions","updateLeafletElement","fromProps","toProps","leafletElement","setBounds","setStyleIfChanged"],"mappings":"AAEA,SAASA,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAMA,MAAMH,SAAN,SAAwBG,IAAxB,CAAoD;AAClDC,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,WAAO,IAAIJ,gBAAJ,CAAqBI,KAAK,CAACC,MAA3B,EAAmC,KAAKC,UAAL,CAAgBF,KAAhB,CAAnC,CAAP;AACD;;AAEDG,EAAAA,oBAAoB,CAACC,SAAD,EAAmBC,OAAnB,EAAmC;AACrD,QAAIA,OAAO,CAACJ,MAAR,KAAmBG,SAAS,CAACH,MAAjC,EAAyC;AACvC,WAAKK,cAAL,CAAoBC,SAApB,CAA8BF,OAAO,CAACJ,MAAtC;AACD;;AACD,SAAKO,iBAAL,CAAuBJ,SAAvB,EAAkCC,OAAlC;AACD;;AAViD;;AAapD,eAAeR,WAAW,CAAmBF,SAAnB,CAA1B","sourcesContent":["// @flow\n\nimport { Rectangle as LeafletRectangle } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport Path from './Path'\nimport type { LatLngBounds, PathProps } from './types'\n\ntype LeafletElement = LeafletRectangle\ntype Props = { bounds: LatLngBounds } & PathProps\n\nclass Rectangle extends Path<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletRectangle(props.bounds, this.getOptions(props))\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    if (toProps.bounds !== fromProps.bounds) {\n      this.leafletElement.setBounds(toProps.bounds)\n    }\n    this.setStyleIfChanged(fromProps, toProps)\n  }\n}\n\nexport default withLeaflet<Props, Rectangle>(Rectangle)\n"]},"metadata":{},"sourceType":"module"}