{"ast":null,"code":"import { TileLayer as LeafletTileLayer } from 'leaflet';\nimport { withLeaflet } from './context';\nimport GridLayer from './GridLayer';\n\nclass TileLayer extends GridLayer {\n  createLeafletElement(props) {\n    return new LeafletTileLayer(props.url, this.getOptions(props));\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    super.updateLeafletElement(fromProps, toProps);\n\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url);\n    }\n  }\n\n}\n\nexport default withLeaflet(TileLayer);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/TileLayer.js"],"names":["TileLayer","LeafletTileLayer","withLeaflet","GridLayer","createLeafletElement","props","url","getOptions","updateLeafletElement","fromProps","toProps","leafletElement","setUrl"],"mappings":"AAEA,SAASA,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAMA,MAAMH,SAAN,SAAwBG,SAAxB,CAAyD;AACvDC,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AACjD,WAAO,IAAIJ,gBAAJ,CAAqBI,KAAK,CAACC,GAA3B,EAAgC,KAAKC,UAAL,CAAgBF,KAAhB,CAAhC,CAAP;AACD;;AAEDG,EAAAA,oBAAoB,CAACC,SAAD,EAAmBC,OAAnB,EAAmC;AACrD,UAAMF,oBAAN,CAA2BC,SAA3B,EAAsCC,OAAtC;;AACA,QAAIA,OAAO,CAACJ,GAAR,KAAgBG,SAAS,CAACH,GAA9B,EAAmC;AACjC,WAAKK,cAAL,CAAoBC,MAApB,CAA2BF,OAAO,CAACJ,GAAnC;AACD;AACF;;AAVsD;;AAazD,eAAeJ,WAAW,CAAmBF,SAAnB,CAA1B","sourcesContent":["// @flow\n\nimport { TileLayer as LeafletTileLayer } from 'leaflet'\n\nimport { withLeaflet } from './context'\nimport GridLayer from './GridLayer'\nimport type { GridLayerProps } from './types'\n\ntype LeafletElement = LeafletTileLayer\ntype Props = { url: string } & GridLayerProps\n\nclass TileLayer extends GridLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    return new LeafletTileLayer(props.url, this.getOptions(props))\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    super.updateLeafletElement(fromProps, toProps)\n    if (toProps.url !== fromProps.url) {\n      this.leafletElement.setUrl(toProps.url)\n    }\n  }\n}\n\nexport default withLeaflet<Props, TileLayer>(TileLayer)\n"]},"metadata":{},"sourceType":"module"}