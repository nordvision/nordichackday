{"ast":null,"code":"import _objectWithoutProperties from \"/Users/n642407/Repos/NordicHackDay/nordic-hack-day/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { TileLayer } from 'leaflet';\nimport isEqual from 'fast-deep-equal';\nimport { withLeaflet } from './context';\nimport GridLayer from './GridLayer';\nimport { EVENTS_RE } from './MapEvented';\n\nclass WMSTileLayer extends GridLayer {\n  createLeafletElement(props) {\n    const url = props.url,\n          params = _objectWithoutProperties(props, [\"url\"]);\n\n    const _this$getOptions = this.getOptions(params),\n          _l = _this$getOptions.leaflet,\n          options = _objectWithoutProperties(_this$getOptions, [\"leaflet\"]);\n\n    return new TileLayer.WMS(url, options);\n  }\n\n  updateLeafletElement(fromProps, toProps) {\n    super.updateLeafletElement(fromProps, toProps);\n\n    const prevUrl = fromProps.url,\n          _po = fromProps.opacity,\n          _pz = fromProps.zIndex,\n          prevProps = _objectWithoutProperties(fromProps, [\"url\", \"opacity\", \"zIndex\"]);\n\n    const _this$getOptions2 = this.getOptions(prevProps),\n          _pl = _this$getOptions2.leaflet,\n          prevParams = _objectWithoutProperties(_this$getOptions2, [\"leaflet\"]);\n\n    const url = toProps.url,\n          _o = toProps.opacity,\n          _z = toProps.zIndex,\n          props = _objectWithoutProperties(toProps, [\"url\", \"opacity\", \"zIndex\"]);\n\n    const _this$getOptions3 = this.getOptions(props),\n          _l = _this$getOptions3.leaflet,\n          params = _objectWithoutProperties(_this$getOptions3, [\"leaflet\"]);\n\n    if (url !== prevUrl) {\n      this.leafletElement.setUrl(url);\n    }\n\n    if (!isEqual(params, prevParams)) {\n      this.leafletElement.setParams(params);\n    }\n  }\n\n  getOptions(params) {\n    const superOptions = super.getOptions(params);\n    return Object.keys(superOptions).reduce((options, key) => {\n      if (!EVENTS_RE.test(key)) {\n        options[key] = superOptions[key];\n      }\n\n      return options;\n    }, {});\n  }\n\n}\n\nexport default withLeaflet(WMSTileLayer);","map":{"version":3,"sources":["/Users/n642407/Repos/NordicHackDay/nordic-hack-day/src/Extra/WMSTileLayer.js"],"names":["TileLayer","isEqual","withLeaflet","GridLayer","EVENTS_RE","WMSTileLayer","createLeafletElement","props","url","params","getOptions","_l","leaflet","options","WMS","updateLeafletElement","fromProps","toProps","prevUrl","_po","opacity","_pz","zIndex","prevProps","_pl","prevParams","_o","_z","leafletElement","setUrl","setParams","superOptions","Object","keys","reduce","key","test"],"mappings":";AAEA,SAASA,SAAT,QAA0B,SAA1B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAMA,MAAMC,YAAN,SAA2BF,SAA3B,CAA4D;AAC1DG,EAAAA,oBAAoB,CAACC,KAAD,EAA+B;AAAA,UACzCC,GADyC,GACtBD,KADsB,CACzCC,GADyC;AAAA,UACjCC,MADiC,4BACtBF,KADsB;;AAAA,6BAEb,KAAKG,UAAL,CAAgBD,MAAhB,CAFa;AAAA,UAEhCE,EAFgC,oBAEzCC,OAFyC;AAAA,UAEzBC,OAFyB;;AAGjD,WAAO,IAAIb,SAAS,CAACc,GAAd,CAAkBN,GAAlB,EAAuBK,OAAvB,CAAP;AACD;;AAEDE,EAAAA,oBAAoB,CAACC,SAAD,EAAmBC,OAAnB,EAAmC;AACrD,UAAMF,oBAAN,CAA2BC,SAA3B,EAAsCC,OAAtC;;AADqD,UAGxCC,OAHwC,GAGaF,SAHb,CAG7CR,GAH6C;AAAA,UAGtBW,GAHsB,GAGaH,SAHb,CAG/BI,OAH+B;AAAA,UAGTC,GAHS,GAGaL,SAHb,CAGjBM,MAHiB;AAAA,UAGDC,SAHC,4BAGaP,SAHb;;AAAA,8BAIb,KAAKN,UAAL,CAAgBa,SAAhB,CAJa;AAAA,UAIpCC,GAJoC,qBAI7CZ,OAJ6C;AAAA,UAI5Ba,UAJ4B;;AAAA,UAK7CjB,GAL6C,GAKFS,OALE,CAK7CT,GAL6C;AAAA,UAK/BkB,EAL+B,GAKFT,OALE,CAKxCG,OALwC;AAAA,UAKnBO,EALmB,GAKFV,OALE,CAK3BK,MAL2B;AAAA,UAKZf,KALY,4BAKFU,OALE;;AAAA,8BAMlB,KAAKP,UAAL,CAAgBH,KAAhB,CANkB;AAAA,UAMpCI,EANoC,qBAM7CC,OAN6C;AAAA,UAM7BH,MAN6B;;AAQrD,QAAID,GAAG,KAAKU,OAAZ,EAAqB;AACnB,WAAKU,cAAL,CAAoBC,MAApB,CAA2BrB,GAA3B;AACD;;AACD,QAAI,CAACP,OAAO,CAACQ,MAAD,EAASgB,UAAT,CAAZ,EAAkC;AAChC,WAAKG,cAAL,CAAoBE,SAApB,CAA8BrB,MAA9B;AACD;AACF;;AAEDC,EAAAA,UAAU,CAACD,MAAD,EAAyB;AACjC,UAAMsB,YAAY,GAAG,MAAMrB,UAAN,CAAiBD,MAAjB,CAArB;AACA,WAAOuB,MAAM,CAACC,IAAP,CAAYF,YAAZ,EAA0BG,MAA1B,CAAiC,CAACrB,OAAD,EAAUsB,GAAV,KAAkB;AACxD,UAAI,CAAC/B,SAAS,CAACgC,IAAV,CAAeD,GAAf,CAAL,EAA0B;AACxBtB,QAAAA,OAAO,CAACsB,GAAD,CAAP,GAAeJ,YAAY,CAACI,GAAD,CAA3B;AACD;;AACD,aAAOtB,OAAP;AACD,KALM,EAKJ,EALI,CAAP;AAMD;;AA/ByD;;AAkC5D,eAAeX,WAAW,CAAsBG,YAAtB,CAA1B","sourcesContent":["// @flow\n\nimport { TileLayer } from 'leaflet'\nimport isEqual from 'fast-deep-equal'\n\nimport { withLeaflet } from './context'\nimport GridLayer from './GridLayer'\nimport { EVENTS_RE } from './MapEvented'\nimport type { GridLayerProps } from './types'\n\ntype LeafletElement = TileLayer.WMS\ntype Props = { url: string } & GridLayerProps\n\nclass WMSTileLayer extends GridLayer<LeafletElement, Props> {\n  createLeafletElement(props: Props): LeafletElement {\n    const { url, ...params } = props\n    const { leaflet: _l, ...options } = this.getOptions(params)\n    return new TileLayer.WMS(url, options)\n  }\n\n  updateLeafletElement(fromProps: Props, toProps: Props) {\n    super.updateLeafletElement(fromProps, toProps)\n\n    const { url: prevUrl, opacity: _po, zIndex: _pz, ...prevProps } = fromProps\n    const { leaflet: _pl, ...prevParams } = this.getOptions(prevProps)\n    const { url, opacity: _o, zIndex: _z, ...props } = toProps\n    const { leaflet: _l, ...params } = this.getOptions(props)\n\n    if (url !== prevUrl) {\n      this.leafletElement.setUrl(url)\n    }\n    if (!isEqual(params, prevParams)) {\n      this.leafletElement.setParams(params)\n    }\n  }\n\n  getOptions(params: Object): Object {\n    const superOptions = super.getOptions(params)\n    return Object.keys(superOptions).reduce((options, key) => {\n      if (!EVENTS_RE.test(key)) {\n        options[key] = superOptions[key]\n      }\n      return options\n    }, {})\n  }\n}\n\nexport default withLeaflet<Props, WMSTileLayer>(WMSTileLayer)\n"]},"metadata":{},"sourceType":"module"}